*{
  margin: 0;
  padding: 0;
  box-sizing: border-box;
} 

/* variaveis  */
:root{
  --text-color:white;
  --bg-url: url(./assets/bg-mobile.jpg);
  --stroke-color:rgba(255, 255, 255, 0.5);
  --surface-color: rgba(255, 255, 255, 0.05);
  --surface-color-hover: rgba(0,0,0,0.02);
  --highlight-color: rgba(255,255,255,0.2);
  --switch-bg-url: url(./assets/moon-starse.svg);


}

.light{
  --text-color:black;
  --bg-url:url(./assets/bg-mobile-light.jpg);
  --stroke-color: rgba(0, 0, 0, 0.5);
  --surface-color: rgba(0, 0, 0, 0.5);
  --surface-color-hover: rgba(0,0,0,0.2);
  --highlight-color: rgba(0,0,0,0.1);
  --switch-bg-url: url(./assets/sun.svg);
  
}


body *{
font-family: "Inter", sans-serif;
color:var(--text-color)
}

body{
  background: var(--bg-url) no-repeat top center/cover;
  height: 100vh;
  /*background-image: url(./assets/bg-mobile.jpg);
  background-repeat: no-repeat;
  background-position: top center;
  background-size: cover;
  
  vamos criar agora um ShortHande
  background: 1º color ou imagem, 2ºrepeat / size*/
}
/* Adjust container width */
#container{
  width: 100%;
  max-width: 588px;
  margin: 56px auto 0px;
  padding: 0 24px;
}
/* profile */
#profile{
  text-align: center;
  padding: 24px;
}

#profile img{
  width: 112px;
  
}
#profile p{
font-weight: 500;
line-height: 24px;
margin-top: 8px;

}
/* Switch */

#switch {
  position: relative;
  width: 64px;
  margin: 4px auto;
}
#switch button{
  width: 32px;
  height: 32px;
  background: white var(--switch-bg-url) no-repeat center;
  border: 0;
  border-radius: 50%;
  position: absolute;
  left: 0;
  z-index: 1; 
  top: 50%;
  transform: translateY(-50%);
  animation: slide-for 0.2s ;
  /*o z-index (esta tag funciona como um posicionador de andares dentro do display, como o span é um display inline e esse tipo de display nao permite sobreposição é necessario convertelo em display block e subir um andar do elemento que se deseja sobrepor e assim ficara no layout uma sobreposição, que na realidade os elementos só estão redmenssionados por andares 
  
  transform: translateY() - Este faz ajuste na vertical; translateX() - Já esse no eixo horizontal
  */
}

.light #switch button{
  animation: slide-in 0.4s forwards;
}

#switch button:hover{
  outline: 8px solid var(--highlight-color);
}

#switch span{
  display: block;
  width: 64px;
  height: 24px;
  background: var(--surface-color);
  border: 1px solid var(--stroke-color);
 -webkit-backdrop-filter: 4px;
 border-radius: 9999px;
}

/* links */
ul{
  list-style: none; 
  display: flex;
  flex-direction:column;
  gap: 16px;
  padding: 24px 0;
 

 }

ul li a{
  
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 16px 24px;
  background:var(--surface-color);
  border: 1px solid var(--stroke-color);
  border-radius: 8px;
  backdrop-filter: blur(4px);
  -webkit-backdrop-filter: blur(4px); /* esta função é um prefixo que alguns browser vão usar para poder liberar */
  text-decoration:none; /* esta função "none" tira a linha que fica no texto. Mas temos também o line-through (Coloca a linha no meio); Over-line(A linha fica em cima); underline(Alinha fica embaixo) */
  font-weight: 500; /*font-weight (do inglês = Espessura da fonte) */

  transition: background 2s;
  
}

ul li a:hover{ /*o :hover é um pseudo selector*/
  background: var(--surface-color-hover);
  border: 1.5px solid var(--text-color);

}

#social-links{
  display: flex;
  justify-content: center;
  padding: 24px 0;
  font-size: 24px;
  

}
#social-links a{
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 16px;
  transition: background 0.2s;
  border-radius: 50%;

}
#social-links a:hover{
  background: var(--highlight-color);
}

footer{
  text-align: center;
  padding: 24px 0;
  font-size: 14px;


}
/* Media queiries */
@media(min-width:700%) {
  :root{
    --bg-url: url(./assets/bg-desktop.jpg);
  }
  .light{
    --bg-url: url(./assets/bg-desktop-Light);
  }
}
/* Animações */
@keyframes slide-in {
  from{
    left:0;
  }
  to{
    left:50%;
  }
}  
@keyframes slide-for{
  from{
    left:50%;
  }
  to{
    left: 0;
  }
}